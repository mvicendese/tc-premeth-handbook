# Generated by Django 3.0.5 on 2020-04-21 11:51

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('subjects', '0010_auto_20200419_1205'),
        ('schools', '0009_auto_20200404_0811'),
        ('assessments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentOptions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('_RATED_max_available_rating', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.AlterModelManagers(
            name='assessment',
            managers=[
                ('unit_assessments', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='assessment',
            name='_attempt_type_RATED_max_available_rating',
        ),
        migrations.RemoveField(
            model_name='assessmentschema',
            name='_attempt_type_RATED_max_available_rating',
        ),
        migrations.RemoveField(
            model_name='ratedattempt',
            name='max_available_rating',
        ),
        migrations.AddField(
            model_name='ratedreport',
            name='rating_average',
            field=models.DecimalField(decimal_places=2, default=1, max_digits=5),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ratedreport',
            name='rating_std_deviation',
            field=models.DecimalField(decimal_places=2, default=1, max_digits=5),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='assessment',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='assessments.AssessmentSchema'),
        ),
        migrations.AlterField(
            model_name='assessment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='schools.Student'),
        ),
        migrations.AlterField(
            model_name='assessment',
            name='subject_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='subjects.SubjectNode'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['schema_id', 'student_id'], name='index_ass_schema_student'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['schema_id', 'subject_node_id'], name='index_ass_schema_node'),
        ),
        migrations.AddIndex(
            model_name='assessment',
            index=models.Index(fields=['schema_id', 'subject_node_id', 'student_id'], name='index_ass_schema_student_node'),
        ),
        migrations.AddConstraint(
            model_name='assessment',
            constraint=models.UniqueConstraint(fields=('schema_id', 'student_id', 'subject_node_id'), name='unique_assessment'),
        ),
        migrations.AddField(
            model_name='assessmentoptions',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='assessments.AssessmentSchema'),
        ),
        migrations.AddField(
            model_name='assessmentoptions',
            name='subject_node',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='subjects.SubjectNode'),
        ),
        migrations.AddIndex(
            model_name='assessmentoptions',
            index=models.Index(fields=['schema_id', 'subject_node_id'], name='index_schema_node'),
        ),
        migrations.AddConstraint(
            model_name='assessmentoptions',
            constraint=models.UniqueConstraint(fields=('schema_id', 'subject_node_id'), name='unique_schema_node'),
        ),
        migrations.AddConstraint(
            model_name='assessmentoptions',
            constraint=models.UniqueConstraint(condition=models.Q(subject_node_id=None), fields=('schema_id',), name='unique_schema_default'),
        ),
    ]
