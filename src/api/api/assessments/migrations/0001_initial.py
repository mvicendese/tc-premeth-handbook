# Generated by Django 3.0.5 on 2020-04-03 01:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('subjects', '0009_data_prepopulate_subject_tree'),
        ('schools', '0007_auto_20200322_2131'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssessmentSchema',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=64)),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='subjects.SubjectNode')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockAssessmentSchema',
            fields=[
                ('assessmentschema_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assessments.AssessmentSchema')),
                ('maximum_available_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('minimum_pass_mark', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('assessments.assessmentschema',),
        ),
        migrations.CreateModel(
            name='LessonOutcomeSelfAssessmentSchema',
            fields=[
                ('assessmentschema_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assessments.AssessmentSchema')),
                ('maximum_available_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('minimum_pass_mark', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('assessments.assessmentschema',),
        ),
        migrations.CreateModel(
            name='LessonPrelearningAssessmentSchema',
            fields=[
                ('assessmentschema_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assessments.AssessmentSchema')),
            ],
            options={
                'abstract': False,
            },
            bases=('assessments.assessmentschema',),
        ),
        migrations.CreateModel(
            name='UnitAssessmentSchema',
            fields=[
                ('assessmentschema_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assessments.AssessmentSchema')),
                ('maximum_available_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('minimum_pass_mark', models.PositiveSmallIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('assessments.assessmentschema',),
        ),
        migrations.CreateModel(
            name='RatingBasedReport',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('generated_at', models.DateTimeField(auto_now=True)),
                ('_candidate_ids', models.TextField(default='')),
                ('_attempted_candidate_ids', models.TextField(default='')),
                ('passed_candidate_count', models.IntegerField()),
                ('_passed_candidate_ids', models.TextField(default='')),
                ('rating_std_dev', models.FloatField()),
                ('assessment_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.AssessmentSchema')),
                ('best_rating_achieved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('subject_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SubjectClass')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RatedAttempt',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('attempt_number', models.PositiveSmallIntegerField()),
                ('date', models.DateTimeField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Assessment')),
            ],
            options={
                'ordering': ('assessment_id', 'attempt_number'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompletionBasedReport',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('generated_at', models.DateTimeField(auto_now=True)),
                ('_candidate_ids', models.TextField(default='')),
                ('_attempted_candidate_ids', models.TextField(default='')),
                ('completed_candidate_count', models.IntegerField()),
                ('_completed_candidate_ids', models.TextField(default='')),
                ('assessment_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.AssessmentSchema')),
                ('subject_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SubjectClass')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompletionAttempt',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('attempt_number', models.PositiveSmallIntegerField()),
                ('date', models.DateTimeField()),
                ('is_completed', models.BooleanField()),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.Assessment')),
            ],
            options={
                'ordering': ('assessment_id', 'attempt_number'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='schema_base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessments.AssessmentSchema'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.Student'),
        ),  
        migrations.AlterField(
            model_name='lessonoutcomeselfassessmentschema',
            name='maximum_available_rating',
            field=models.PositiveSmallIntegerField(default=5),
        ),
    ]
